/* STUDENTS:  DO NOT EDIT THIS FILE.  INSTEAD, MODIFY YOUR OWN PROJECT
 * CODE TO FIT THE SPECIFICATION GIVEN BY THE TESTS IN THIS FILE.
 *
 * If you DO modify it, we overwrite it with a fresh version from our repo
 * when grading, so you can't use it to fudge the tests anyway.
 *
 * This file is used by the CS3081W auto-grading system.
 *
 * Please note, the assessment tests for grading, will use the same include
 * files, class names, and function names for accessing students' code that you
 * find in this file.  So students, if you write your code so that it passes
 * these feedback tests, you can be assured that the auto-grader will at least
 * be able to properly link with your code.
 */

/*******************************************************************************
 * Includes
 ******************************************************************************/
#include <gtest/gtest.h>
// #include "../src/sensor.h"
// #include "../src/sensor_distress.h"
// #include "../src/sensor_entity_type.h"
// #include "../src/sensor_proximity.h"
// #include "../src/sensor_touch.h"
// #include "../src/obstacle.h"
// #include "../src/player.h"

#ifdef StudentTestsIT2_TEST

/*******************************************************************************
 * Test Cases
 ******************************************************************************/
TEST(StudentTestsIT2, STSanity) {
  EXPECT_EQ(1, 2);
  //
  // csci3081::SensorTouch st;
  //
  // EXPECT_EQ(st.get_activated(), false);
  // EXPECT_EQ(st.get_point_of_contact(), Position(0, 0));
  // EXPECT_EQ(st.get_angle_of_contact(), 0.0);
  //
  // st.set_activated(true);
  // st.set_point_of_contact(Position(1.0, 1.0));
  // st.set_angle_of_contact(180.0);
  // EXPECT_EQ(st.get_activated(), true);
  // EXPECT_EQ(st.get_point_of_contact(), Position(1.0, 1.0));
  // EXPECT_DOUBLE_EQ(st.get_angle_of_contact(), 180.0);
}

TEST(StudentTestsIT2, STReset) {
  EXPECT_EQ(1, 2);
  //
  // csci3081::SensorTouch st;
  //
  // st.set_activated(true);
  // st.set_point_of_contact(Position(1.0, 1.0));
  // st.set_angle_of_contact(180.0);
  // EXPECT_EQ(st.get_activated(), true);
  // EXPECT_EQ(st.get_point_of_contact(), Position(1.0, 1.0));
  // EXPECT_DOUBLE_EQ(st.get_angle_of_contact(), 180.0);
  //
  // st.Reset();
  // EXPECT_EQ(st.activated(), false);
  // EXPECT_EQ(st.point_of_contact(), Position(0, 0));
  // EXPECT_EQ(st.angle_of_contact(), 0.0);
}

#endif /* SENSORS_TEST */
